{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore (Simple)",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification and Vase microservice.",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "Swagger API team",
            "email": "foo@example.com",
            "url": "http://swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:8080",
    "basePath": "/petstore/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/pets": {
            "get": {
                "description": "Returns all pets from database",
                "operationId": "findPets",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/xml",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pet"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates new pets in the store. The id must be unique.",
                "operationId": "addPet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pet",
                        "in": "body",
                        "description": "Pet to add to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pet"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes pets based on db/id. Post data looks like:\n\n{ \"payload\": [ { \"db/id\": [\"pet/id\", 0] } ] }\n",
                "operationId": "deletePet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "db/id",
                        "in": "body",
                        "description": "Pet id to delete from the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deletePet"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet delete response",
                        "schema": {
                            "$ref": "#/definitions/pet"
                        }
                    },
                    "default": {
                        "description": "unexpedted error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/pet/{id}": {
            "get": {
                "description": "Returns a pet based on a single ID.",
                "operationId": "findPetById",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/xml",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of pet to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pet": {
            "type": "object",
            "properties": {
                "db/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pet/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pet/name": {
                    "type": "string"
                },
                "pet/tag": {
                    "type": "string"
                }
            }
        },
        "newPet": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "pet/id",
                            "pet/name"
                        ],
                        "properties": {
                            "pet/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "pet/name": {
                                "type": "string"
                            },
                            "pet/tag": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "deletePet": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                }
            }
        },
        "errorModel": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
